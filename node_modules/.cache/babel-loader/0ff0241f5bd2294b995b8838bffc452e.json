{"ast":null,"code":"var _jsxFileName = \"/Users/mohammed.qureshi/Documents/react-projects/Project/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search user\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get user\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/mohammed.qureshi/Documents/react-projects/Project/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,UANP;AAQA,IAAIC,cAAJ;AACA,IAAIC,kBAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,cAAc,GAAGE,OAAO,CAACC,GAAR,CAAYE,0BAA7B;AACAJ,EAAAA,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYG,8BAAjC;AACD;;AAED,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACG,aAAD,EAAgBe,YAAhB,CAApC,CAR6B,CAU7B;;AACA,QAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CACf,yCAAwCH,IAAK,cAAaf,OAAO,CAACC,GAAR,CAAYE,0BAA2B,kBAAiBH,OAAO,CAACC,GAAR,CAAYG,8BAA+B,EAD9I,CAAlB;AAIAS,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE1B,YADC;AAEP2B,MAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAFX,KAAD,CAAR;AAID,GAXD,CAX6B,CAwB7B;;;AAEA,QAAMC,OAAO,GAAG,MAAOC,QAAP,IAAoB;AAClCR,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CACf,gCAA+BM,QAAS,cAAaxB,OAAO,CAACC,GAAR,CAAYE,0BAA2B,kBAAiBH,OAAO,CAACC,GAAR,CAAYG,8BAA+B,EADzI,CAAlB;AAIAS,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEvB,QADC;AAEPwB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAXD,CA1B6B,CAuC7B;;;AACA,QAAMI,YAAY,GAAG,MAAOD,QAAP,IAAoB;AACvCR,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CACf,gCAA+BM,QAAS,gDAA+CxB,OAAO,CAACC,GAAR,CAAYE,0BAA2B,kBAAiBH,OAAO,CAACC,GAAR,CAAYG,8BAA+B,EAD3K,CAAlB;AAIAS,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEtB,SADC;AAEPuB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAXD,CAxC6B,CAqD7B;;;AACA,QAAMK,UAAU,GAAG,MAAMb,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAExB;AAAR,GAAD,CAAjC,CAtD6B,CAwD7B;;;AACA,QAAMqB,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEzB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLc,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA,WALK;AAMLY,MAAAA,UANK;AAOLH,MAAAA,OAPK;AAQLE,MAAAA;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGnB,KAAK,CAACqB,QAXT,CADF;AAeD,CA9ED;;AAgFA,eAAetB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search user\n  const searchUsers = async (text) => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items,\n    });\n  };\n\n  // Get user\n\n  const getUser = async (username) => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data,\n    });\n  };\n\n  // Get Repos\n  const getUserRepos = async (username) => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  };\n\n  // Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING,\n    });\n  };\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}>\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}