{"ast":null,"code":"var _jsxFileName = \"/Users/mohammed.qureshi/Documents/react-projects/Project/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubState, initialState); // Search user\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; // Get user\n  // Get Repos\n  // Clear Users\n  // Set Loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/mohammed.qureshi/Documents/react-projects/Project/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","setUsers","data","items","type","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACS,WAAD,EAAcE,YAAd,CAApC,CAR6B,CAU7B;;AACA,QAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CACf,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAD9I,CAAlB;AAIAC,IAAAA,QAAQ,CAACN,GAAG,CAACO,IAAJ,CAASC,KAAV,CAAR;AACAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GATD,CAX6B,CAsB7B;AAEA;AAEA;AAEA;;;AACA,QAAMA,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEzB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAJV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,KAAK,CAACqB,QAPT,CADF;AAWD,CA9CD;;AAgDA,eAAetB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubState, initialState);\n\n  // Search user\n  const searchUsers = async (text) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n\n  // Get user\n\n  // Get Repos\n\n  // Clear Users\n\n  // Set Loading\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING,\n    });\n  };\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n      }}>\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}